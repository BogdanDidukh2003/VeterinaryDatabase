CREATE SCHEMA IF NOT EXISTS bogdan_didukh DEFAULT CHARACTER SET utf8 ;
USE bogdan_didukh;

-- MySQL Script generated by MySQL Workbench
-- Thu Nov 11 11:59:13 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema veterinary
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema veterinary
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `veterinary` DEFAULT CHARACTER SET utf8 ;
-- -----------------------------------------------------
-- Schema bogdan_didukh
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema bogdan_didukh
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `bogdan_didukh` DEFAULT CHARACTER SET utf8 ;
USE `veterinary` ;

-- -----------------------------------------------------
-- Table `veterinary`.`pet_owner`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `veterinary`.`pet_owner` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `first_name` VARCHAR(45) NOT NULL,
  `last_name` VARCHAR(45) NOT NULL,
  `street` VARCHAR(45) NOT NULL,
  `city` VARCHAR(45) NOT NULL,
  `state` VARCHAR(45) NOT NULL,
  `phone_number` VARCHAR(15) NOT NULL,
  `email_address` VARCHAR(320) NOT NULL,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `veterinary`.`clinic`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `veterinary`.`clinic` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `street` VARCHAR(45) NOT NULL,
  `city` VARCHAR(45) NOT NULL,
  `state` VARCHAR(45) NOT NULL,
  `zip_code` CHAR(5) NOT NULL,
  `phone_number` VARCHAR(15) NOT NULL,
  `email_address` VARCHAR(320) NOT NULL,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `veterinary`.`staff`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `veterinary`.`staff` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `first_name` VARCHAR(45) NOT NULL,
  `last_name` VARCHAR(45) NOT NULL,
  `street` VARCHAR(45) NOT NULL,
  `city` VARCHAR(45) NOT NULL,
  `state` VARCHAR(45) NOT NULL,
  `phone_number` VARCHAR(15) NOT NULL,
  `email_address` VARCHAR(320) NOT NULL,
  `clinic_id` INT NOT NULL,
  PRIMARY KEY (`id`, `clinic_id`),
  CONSTRAINT `fk_staff_clinic1`
    FOREIGN KEY (`clinic_id`)
    REFERENCES `veterinary`.`clinic` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `veterinary`.`appointment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `veterinary`.`appointment` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `day_of_week` ENUM('Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun') NOT NULL,
  `end_time` TIME NOT NULL,
  `start_time` TIME NOT NULL,
  `pet_owner_id` INT NOT NULL,
  `staff_id` INT NOT NULL,
  `staff_clinic_id` INT NOT NULL,
  PRIMARY KEY (`id`, `pet_owner_id`, `staff_id`, `staff_clinic_id`),
  CONSTRAINT `fk_appointment_pet_owner1`
    FOREIGN KEY (`pet_owner_id`)
    REFERENCES `veterinary`.`pet_owner` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_appointment_staff1`
    FOREIGN KEY (`staff_id` , `staff_clinic_id`)
    REFERENCES `veterinary`.`staff` (`id` , `clinic_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `veterinary`.`illness`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `veterinary`.`illness` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `treatment_description` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `veterinary`.`medical_card`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `veterinary`.`medical_card` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `serial_number` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `serial_number_UNIQUE` (`serial_number` ASC) VISIBLE);


-- -----------------------------------------------------
-- Table `veterinary`.`pet_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `veterinary`.`pet_type` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `veterinary`.`pet`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `veterinary`.`pet` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `pet_owner_id` INT NOT NULL,
  `pet_type_id` INT NOT NULL,
  `medical_card_id` INT NOT NULL,
  PRIMARY KEY (`id`, `pet_owner_id`, `pet_type_id`),
  UNIQUE INDEX `medical_card_id_UNIQUE` (`medical_card_id` ASC) VISIBLE,
  INDEX `name` (`name` ASC) VISIBLE,
  CONSTRAINT `fk_pet_pet_owner`
    FOREIGN KEY (`pet_owner_id`)
    REFERENCES `veterinary`.`pet_owner` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pet_pet_type1`
    FOREIGN KEY (`pet_type_id`)
    REFERENCES `veterinary`.`pet_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pet_medical_card1`
    FOREIGN KEY (`medical_card_id`)
    REFERENCES `veterinary`.`medical_card` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `veterinary`.`medical_card_has_illness`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `veterinary`.`medical_card_has_illness` (
  `medical_card_id` INT NOT NULL,
  `illness_id` INT NOT NULL,
  PRIMARY KEY (`medical_card_id`, `illness_id`),
  CONSTRAINT `fk_medical_card_has_illness_medical_card1`
    FOREIGN KEY (`medical_card_id`)
    REFERENCES `veterinary`.`medical_card` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_medical_card_has_illness_illness1`
    FOREIGN KEY (`illness_id`)
    REFERENCES `veterinary`.`illness` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

USE `bogdan_didukh` ;

-- -----------------------------------------------------
-- Table `bogdan_didukh`.`clinic`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bogdan_didukh`.`clinic` (
  `id` INT NULL DEFAULT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `street` VARCHAR(45) NOT NULL,
  `city` VARCHAR(45) NOT NULL,
  `state` VARCHAR(45) NOT NULL,
  `zip_code` CHAR(5) NOT NULL,
  `phone_number` VARCHAR(15) NOT NULL,
  `email_address` VARCHAR(320) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `name` (`name` ASC) VISIBLE);


-- -----------------------------------------------------
-- Table `bogdan_didukh`.`illness`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bogdan_didukh`.`illness` (
  `id` INT NULL DEFAULT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `treatment_description` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX `name` (`name` ASC) VISIBLE);


-- -----------------------------------------------------
-- Table `bogdan_didukh`.`medical_card`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bogdan_didukh`.`medical_card` (
  `id` INT NULL DEFAULT NULL AUTO_INCREMENT,
  `serial_number` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `serial_number_UNIQUE` (`serial_number` ASC) VISIBLE,
  INDEX `serial_naumber` (`serial_number` ASC) VISIBLE);


-- -----------------------------------------------------
-- Table `bogdan_didukh`.`medical_card_has_illness`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bogdan_didukh`.`medical_card_has_illness` (
  `medical_card_id` INT NOT NULL,
  `illness_id` INT NOT NULL,
  PRIMARY KEY (`medical_card_id`, `illness_id`),
  CONSTRAINT `fk_medical_card_has_illness_illness1`
    FOREIGN KEY (`illness_id`)
    REFERENCES `bogdan_didukh`.`illness` (`id`),
  CONSTRAINT `fk_medical_card_has_illness_medical_card1`
    FOREIGN KEY (`medical_card_id`)
    REFERENCES `bogdan_didukh`.`medical_card` (`id`));


-- -----------------------------------------------------
-- Table `bogdan_didukh`.`pet_owner`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bogdan_didukh`.`pet_owner` (
  `id` INT NULL DEFAULT NULL AUTO_INCREMENT,
  `first_name` VARCHAR(45) NOT NULL,
  `last_name` VARCHAR(45) NOT NULL,
  `street` VARCHAR(45) NOT NULL,
  `city` VARCHAR(45) NOT NULL,
  `state` VARCHAR(45) NOT NULL,
  `phone_number` VARCHAR(15) NOT NULL,
  `email_address` VARCHAR(320) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `last_name` (`last_name` ASC) VISIBLE);


-- -----------------------------------------------------
-- Table `bogdan_didukh`.`pet_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bogdan_didukh`.`pet_type` (
  `id` INT NULL DEFAULT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `bogdan_didukh`.`pet`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bogdan_didukh`.`pet` (
  `id` INT NULL DEFAULT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `pet_owner_id` INT NOT NULL,
  `pet_type_id` INT NOT NULL,
  `medical_card_id` INT NULL DEFAULT NULL,
  PRIMARY KEY (`id`, `pet_owner_id`, `pet_type_id`),
  INDEX `name` (`name` ASC) VISIBLE,
  CONSTRAINT `fk_pet_medical_card1`
    FOREIGN KEY (`medical_card_id`)
    REFERENCES `bogdan_didukh`.`medical_card` (`id`),
  CONSTRAINT `fk_pet_pet_owner`
    FOREIGN KEY (`pet_owner_id`)
    REFERENCES `bogdan_didukh`.`pet_owner` (`id`),
  CONSTRAINT `fk_pet_pet_type1`
    FOREIGN KEY (`pet_type_id`)
    REFERENCES `bogdan_didukh`.`pet_type` (`id`));


-- -----------------------------------------------------
-- Table `bogdan_didukh`.`staff`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bogdan_didukh`.`staff` (
  `id` INT NULL DEFAULT NULL AUTO_INCREMENT,
  `first_name` VARCHAR(45) NOT NULL,
  `last_name` VARCHAR(45) NOT NULL,
  `street` VARCHAR(45) NOT NULL,
  `city` VARCHAR(45) NOT NULL,
  `state` VARCHAR(45) NOT NULL,
  `phone_number` VARCHAR(15) NOT NULL,
  `email_address` VARCHAR(320) NOT NULL,
  `clinic_id` INT NOT NULL,
  PRIMARY KEY (`id`, `clinic_id`),
  INDEX `last_name` (`last_name` ASC) VISIBLE,
  CONSTRAINT `fk_staff_clinic1`
    FOREIGN KEY (`clinic_id`)
    REFERENCES `bogdan_didukh`.`clinic` (`id`));


-- -----------------------------------------------------
-- Table `bogdan_didukh`.`appointment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bogdan_didukh`.`appointment` (
  `id` INT NULL DEFAULT NULL AUTO_INCREMENT,
  `day_of_week` ENUM('Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun') NOT NULL,
  `end_time` TIME NOT NULL,
  `start_time` TIME NOT NULL,
  `pet_owner_id` INT NOT NULL,
  `staff_id` INT NOT NULL,
  `staff_clinic_id` INT NOT NULL,
  PRIMARY KEY (`id`, `pet_owner_id`, `staff_id`, `staff_clinic_id`),
  INDEX `day_of_week` (`day_of_week` ASC) VISIBLE,
  CONSTRAINT `fk_appointment_pet_owner1`
    FOREIGN KEY (`pet_owner_id`)
    REFERENCES `bogdan_didukh`.`pet_owner` (`id`),
  CONSTRAINT `fk_appointment_staff1`
    FOREIGN KEY (`staff_id` , `staff_clinic_id`)
    REFERENCES `bogdan_didukh`.`staff` (`id` , `clinic_id`));


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;


INSERT INTO bogdan_didukh.clinic (id, name, street, city, state, zip_code, phone_number, email_address) VALUES (1, 'Lkp lev', 'Promyslova', 'Lviv', 'Lvivska', '12345', '1234567890', 'lev@gmail.com');

INSERT INTO bogdan_didukh.staff (id, first_name, last_name, street, city, state, phone_number, email_address, clinic_id) VALUES (1, 'Ivanenko', 'Vasyl', 'Lychakivska', 'Lviv', 'Lvivska', '0987654321', 'i@gmail.com', 1);

INSERT INTO bogdan_didukh.pet_owner (id, first_name, last_name, street, city, state, phone_number, email_address) VALUES (1, 'Marko', 'Polo', 'Bandery', 'Lviv', 'Lvivska', '0896734512', 'mp@gmail.com');

INSERT INTO bogdan_didukh.pet_type (id, name) VALUES (1, 'Cat');
INSERT INTO bogdan_didukh.pet_type (id, name) VALUES (2, 'Dog');

INSERT INTO bogdan_didukh.medical_card (id, serial_number) VALUES (1, '12345');

INSERT INTO bogdan_didukh.illness (id, name, treatment_description) VALUES (1, 'Cancer', 'Operation');

INSERT INTO bogdan_didukh.appointment (id, day_of_week, end_time, start_time, pet_owner_id, staff_id, staff_clinic_id) VALUES (1, 'Mon', '12:00:00', '11:00:00', 1, 1, 1);

INSERT INTO bogdan_didukh.pet (id, name, pet_owner_id, pet_type_id, medical_card_id) VALUES (4, 'Sharik', 1, 2, 1);
INSERT INTO bogdan_didukh.pet (id, name, pet_owner_id, pet_type_id, medical_card_id) VALUES (5, 'Kit', 1, 1, null);

INSERT INTO bogdan_didukh.medical_card_has_illness (medical_card_id, illness_id) VALUES (1, 1);

